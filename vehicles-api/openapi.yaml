openapi: 3.0.0
info:
  title: Vehicle Service API
  version: 1.0.0
  description: Mock AWS Lambda CRUD API for managing vehicles at Infomedia.
servers:
  - url: https://iqtz5jlenb.execute-api.us-east-1.amazonaws.com
paths:
  /:
    get:
      summary: Get all vehicles
      operationId: getAllVehicles
      responses:
        '200':
          description: List of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
    post:
      summary: Create a new vehicle
      operationId: createVehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'

  /{id}:
    get:
      summary: Get a vehicle by ID
      operationId: getVehicleById
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: Vehicle not found
    put:
      summary: Update a vehicle by ID
      operationId: updateVehicle
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleInput'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: Not found
    delete:
      summary: Delete a vehicle by ID
      operationId: deleteVehicle
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '204':
          description: Deleted
        '404':
          description: Not found

components:
  schemas:
    Vehicle:
      type: object
      properties:
        id:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: integer
      required: [id, make, model, year]

    VehicleInput:
      type: object
      properties:
        make:
          type: string
        model:
          type: string
        year:
          type: integer
      required: [make, model, year]
